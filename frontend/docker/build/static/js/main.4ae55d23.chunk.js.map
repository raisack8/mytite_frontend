{"version":3,"sources":["CmnComponents/ErrorModal.jsx","TiteComponents/TimeLine.jsx","TiteComponents/Section.jsx","utils.js","TiteComponents/StageArea.jsx","TiteComponents/TimeTableArea.jsx","CreateBtn.jsx","Templates/Home.jsx","Templates/MyTite.jsx","Templates/SelectFes.jsx","App.jsx","index.js"],"names":["ErrorModal","props","_useState","useState","_useState2","_slicedToArray","closeFlg","setCloseFlg","isVisibled","React","createElement","className","id","type","onClick","fill","viewBox","xmlns","message","TimeLine","_ref","wholeTime","start","end","timeLine","setTimeLine","useEffect","endTime","timeLineArr","currentTime","formattedTime","toLocaleTimeString","hour","minute","hour12","push","Date","getTime","timeInterval","generateTimeLine","Fragment","map","time","index","hours","split","minutes","textStyle","textSize","startsWith","slice","key","concat","Section","section","clickFlg","setClickFlg","contextVal","useContext","MyContext","allottedTime","parseInt","allotted_time","repeatCount","Math","floor","formatTime","dateTime","dateObj","getUTCHours","getUTCMinutes","toString","padStart","startTime","start_time","setMinutes","getMinutes","endTimeString","repeatedElements","Array","from","length","_","artist_name","setSection","timeConvert","timeDt","getHours","StageArea","stageInfo","sections","timeList","flag","createTimeList","orgTimeList","sec","utcTime","updatedDateObj","dataStr","checkStartTime","sectionIndex","sectionStartFlag","style","backgroundColor","color","uuidv4","name","TimeTableArea","stages","distributeSectionDict","dict","stage","secLis","filter","distributeSection","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","CreateBtn","contextData","navigate","useNavigate","createMyTite","_ref2","_asyncToGenerator","_callee","dataToSend","response","_context","sectionData","axios","post","process","console","log","data","myTiteSections","alert","errorMsg","t0","apply","arguments","Home","useParams","setSections","_useState3","_useState4","setStages","_useState5","_useState6","setError","getPosts","get","res1","res2","paddingTop","MyTite","useLocation","place","SelectFes","Link","to","src","alt","Routes","Route","path","component","App","Router","exact","element","includes","item","createContext","ReactDOM","createRoot","document","getElementById","render","Provider"],"mappings":"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","file":"static/js/main.4ae55d23.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst ErrorModal = (props) => {\n  const [closeFlg, setCloseFlg]=useState(false);\n  \n  if (props.isVisibled && !closeFlg) {\n    // TODO:あわよくば出現したら3秒後に閉じるようにしたい\n    return (\n      <div className=\"\">\n        <div id=\"defaultModal\"\n            className=\"fixed top-0 z-50 w-1/2 p-4 overflow-x-hidden \n                overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full\">\n            <div className=\"relative w-full max-w-2xl max-h-full\">\n                <div className=\"relative bg-red-300  border border-8 border-red-400 rounded-xl shadow\">\n                    <div className=\"flex justify-center item-center text-center p-4\">\n                        <h3 className=\"text-md font-semibold text-gray-900\">\n                            エラーが発生しました\n                        </h3>\n                        <button type=\"button\" className=\"text-gray-400 bg-transparent hover:bg-red-600 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center\"\n                        onClick={setCloseFlg(true)}>\n                            <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n                        </button>\n                    </div>\n                    <div className=\"p-6 space-y-6\">\n                        <p className=\"text-base leading-relaxed text-slate-700\">\n                          {/* エラーメッセージを表示したい場合にはprops.messageに値を入れる */}\n                          {props.message}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default ErrorModal","import React, { useState, useEffect } from 'react'\n\nconst TimeLine = ({wholeTime}) => {\n  \n  const { start, end } = wholeTime;\n\n  const [timeLine, setTimeLine] = useState([]);\n\n  useEffect(() => {\n    const generateTimeLine = () => {\n      const startTime = start;\n      const endTime = end;\n      const timeInterval = 5; // 分単位の間隔\n\n      const timeLineArr = [];\n      let currentTime = startTime;\n\n      while (currentTime <= endTime) {\n        const formattedTime = currentTime.toLocaleTimeString('en-US', {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false,\n        });\n        timeLineArr.push(formattedTime);\n\n        currentTime = new Date(currentTime.getTime() + timeInterval * 60000);\n      }\n\n      setTimeLine(timeLineArr);\n    };\n\n    generateTimeLine();\n  }, [start, end]);\n\n  return (\n    <>\n    <div>\n      <div>\n      {timeLine.map((time, index) => {\n        const hours = time.split(':')[0];\n        const minutes = time.split(':')[1];\n        let textStyle = 'font-normal';\n        let textSize = 'text-xs';\n        \n        if (minutes === '00') {\n          textStyle = 'font-bold';\n          textSize = 'text-base';\n        } else if (minutes === '15' || minutes === '30' || minutes === '45') {\n          textStyle = 'font-normal';\n          textSize = 'text-base';\n        }\n        \n        const formattedTime = hours.startsWith('0') ? hours.slice(1) : hours;\n        \n        return (\n          <div\n          key={index}\n          className={`${textStyle} ${textSize} mt-1 h-6 flex items-center justify-end pr-2`}\n          >\n            {formattedTime}:{minutes}\n          </div>\n        );\n      })}\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default TimeLine","import React, { useState,useContext } from 'react';\r\n// import { add } from '../redux/state';\r\nimport MyContext from '..';\r\n\r\nconst Section = (props) => {\r\n  const { section } = props;\r\n\r\n  const [clickFlg, setClickFlg] = useState(false);\r\n  const contextVal = useContext(MyContext)\r\n\r\n  // Sectionをクリックしたときの処理\r\n  const toggleClickFlg = (id) => {\r\n    setClickFlg(!clickFlg);\r\n    // Contextに値を登録する\r\n    contextVal.setSection(id);\r\n  };\r\n\r\n\r\n  const notChoise = 'bg-white';\r\n  const choiced = 'bg-red-200';\r\n  const allottedTime = parseInt(section.allotted_time);\r\n  const repeatCount = Math.floor(allottedTime / 5); // allottedTimeを5で割った商を取得\r\n\r\n  const formatTime = (dateTime) => {\r\n    const dateObj = new Date(dateTime);\r\n    const hours = dateObj.getUTCHours(); // 標準時に9時間を加算\r\n    const minutes = dateObj.getUTCMinutes().toString().padStart(2, '0');\r\n    return `${hours}:${minutes}`;\r\n  };\r\n\r\n  const startTime = formatTime(section.start_time);\r\n  const endTime = new Date(section.start_time);\r\n  endTime.setMinutes(endTime.getMinutes() + allottedTime);\r\n  const endTimeString = formatTime(endTime);\r\n\r\n  const repeatedElements = Array.from({ length: repeatCount }, (_, index) => {\r\n    if (index === 0) {\r\n      return (\r\n        <div className={`mx-2 mt-1 rounded-t-md ${clickFlg ? choiced : notChoise}`} \r\n          key={index}>\r\n          <div className='mx-1'>\r\n            <p>{startTime}~{endTimeString}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (index === 1) {\r\n      return (\r\n        <div className={`mx-2 pt-1 ${clickFlg ? choiced : notChoise}`} \r\n          key={index}>\r\n          <div className='mx-2'>\r\n            {section.artist_name}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (index === repeatCount-1) {\r\n      return (\r\n        <div className={`mx-2 pt-1 rounded-b-md ${clickFlg ? choiced : notChoise}`} \r\n          key={index}>\r\n          <br />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={`mx-2 pt-1 ${clickFlg ? choiced : notChoise}`} key={index}>\r\n          <br />\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n\r\n  \r\n  return (\r\n    <div onClick={()=>toggleClickFlg(section.id)}>\r\n      {repeatedElements}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;","// export const  createTimeList=(startTime, endTime)=> {\n//   const timeList = [];\n//   let currentTime = new Date(startTime);\n\n//   while (currentTime <= endTime) {\n//     const hour = currentTime.getHours().toString().padStart(2, '0');\n//     const minutes = currentTime.getMinutes().toString().padStart(2, '0');\n//     const timeString = `${hour}:${minutes}`;\n\n//     timeList.push({ time: timeString, flag: false });\n\n//     currentTime.setMinutes(currentTime.getMinutes() + 5);\n//   }\n\n//   return timeList;\n// }\n\nexport const timeConvert=(timeDt)=>{\n  const hour = timeDt.getHours().toString().padStart(2, '0');\n  const minutes = timeDt.getMinutes().toString().padStart(2, '0');\n  return `${hour}:${minutes}`;\n}","import React from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Section from './Section';\r\nimport {timeConvert} from '../utils'\r\n\r\n\r\nconst StageArea = (props) => {\r\n  const { stageInfo, sections, wholeTime } = props;\r\n  \r\n  // 時間オブジェクト配列を作る処理\r\n  const  createTimeList=(startTime, endTime)=> {\r\n    const timeList = [];\r\n    let currentTime = new Date(startTime);\r\n    while (currentTime <= endTime) {\r\n      timeList.push({ time: timeConvert(currentTime), flag: false });\r\n      currentTime.setMinutes(currentTime.getMinutes() + 5);\r\n    }\r\n    return timeList;\r\n  }\r\n\r\n  const checkStartTime=(timeList)=>{\r\n    const orgTimeList = timeList;\r\n    sections.map((sec)=>{\r\n      let start_dt = new Date(sec.start_time);\r\n      // 標準時が効いているので時間を合わせる。\r\n      // 地域によって差がでる？\r\n      const utcTime = start_dt.getTime();\r\n      const updatedTime = utcTime - (9 * 60 * 60 * 1000);\r\n      const updatedDateObj = new Date(updatedTime);\r\n      // hh:mmの形式に合わせている\r\n      let dataStr = timeConvert(updatedDateObj);\r\n      timeList.map((time,index)=>{\r\n        if(time.time==dataStr){\r\n          sec.flag = true;\r\n          orgTimeList[index].flag=true\r\n        }\r\n      })\r\n    })\r\n    return orgTimeList;\r\n  }\r\n\r\n  let timeList = createTimeList(wholeTime.start,wholeTime.end);\r\n  timeList = checkStartTime(timeList);\r\n\r\n  let sectionIndex = -1;\r\n  let allottedTime = 0;\r\n  let sectionStartFlag = false;\r\n\r\n  return (\r\n    <div className=''>\r\n      <div key={stageInfo.id}\r\n        className='w-60 h-full'\r\n        style={{backgroundColor:stageInfo.color}}>\r\n        <div key={uuidv4()} className='flex h-16 items-center justify-center text-white text-white-outline text-4xl font-extrabold'>\r\n          {stageInfo.name}\r\n        </div>\r\n        {timeList.map((time)=>{\r\n          if(!time.flag){\r\n            if(sectionStartFlag){\r\n              allottedTime = allottedTime-5;\r\n              if(allottedTime<=0){\r\n                sectionStartFlag=false;\r\n              }\r\n              return null;\r\n            }\r\n            return (\r\n              <p className='mt-1 h-6 text-gray-300 text-center' key={uuidv4()}>\r\n                ---------------------------------\r\n                </p>\r\n            )\r\n          }else{\r\n            sectionIndex++;\r\n            if(sectionIndex <= sections.length-1){\r\n              allottedTime = sections[sectionIndex].allotted_time;\r\n              sectionStartFlag = true;\r\n\r\n              allottedTime = allottedTime-5;\r\n              return(\r\n                <Section section={sections[sectionIndex]} key={uuidv4()}/>\r\n                )\r\n            }\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StageArea","import React from 'react'\r\nimport StageArea from './StageArea'\r\nimport '../styles/custom.css';\r\n\r\nconst TimeTableArea = ({stages,sections,wholeTime}) => {\r\n\r\n  // 画面表示時にステージ毎のSectionに分ける\r\n  const distributeSection=()=>{\r\n    let dict = {}\r\n    stages.map((stage) => {\r\n      const secLis = sections.filter((sec) => sec.stage == stage.id);\r\n      dict[stage.id] = secLis;\r\n      }\r\n    );\r\n    return dict\r\n  };\r\n  const distributeSectionDict = distributeSection();\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      {stages.map((stage) => \r\n        <StageArea \r\n          stageInfo={stage} \r\n          sections={distributeSectionDict[stage.id]} \r\n          wholeTime={wholeTime}\r\n          key={stage.id}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeTableArea","import React, { useContext } from 'react';\nimport MyContext from '.';\nimport axios from 'axios';\nimport { useNavigate  } from 'react-router-dom';\n\nconst CreateBtn = ({wholeTime}) => {\n\n  const contextData = useContext(MyContext)\n  const navigate  = useNavigate ();\n  const createMyTite=async()=>{\n    try {\n      const dataToSend = {\n        id: contextData.sectionData\n      };\n      // POSTリクエストを送信\n      const response = await axios.post(process.env.REACT_APP_DJANGO_API_URL+'/api/api/', dataToSend);\n      console.log(response)\n      // 1つも選択していなかったらエラー\n      if(Object.keys(response.data.message.myTiteSections).length===0){\n        alert(response.data.message.errorMsg)\n        return;\n      }\n      // エラーメッセージが返されたら表示してreturn\n      if(response.data.message.errorMsg!==\"\"){\n        alert(response.data.message.errorMsg)\n        return;\n      }\n      navigate('/test',{state: {\n        'data':response.data,\n        'wholeTime':wholeTime\n      }});\n\n    } catch (error) {\n      alert(\"システムエラーが発生しました\")\n      console.error('Error sending POST request:', error);\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" \n        className=\"text-blue-700 border border-blue-700 \n          hover:bg-blue-700 hover:text-white \n          focus:ring-4 focus:outline-none focus:ring-blue-300 \n          font-medium rounded-full text-sm p-2.5 text-center \n          inline-flex items-center\"\n        onClick={()=>createMyTite()}>\n        <span className='p-2 text-xl'>GO</span>\n      </button>\n      <button >Push</button>\n    </div>\n  );\n};\n\n\nexport default CreateBtn;\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport ErrorModal from '../CmnComponents/ErrorModal'\nimport TimeLine from '../TiteComponents/TimeLine'\nimport TimeTableArea from '../TiteComponents/TimeTableArea'\nimport CreateBtn from '../CreateBtn'\nimport axios from \"axios\"\n\nconst Home = () => {\n  const { id } = useParams();\n\n  // Sectionの値\n  const[sections, setSections] = useState([]);\n  // Stagesの値\n  const[stages, setStages] = useState([]);\n  const[error, setError] = useState('')\n  const wholeTime = {\n    \"start\":new Date('1899-12-30T09:00:00'),\n    \"end\":new Date('1899-12-30T21:00:00'),\n  }\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  const iFesId = id\n  // DjangoのAPIと通信するメソッド\n  const getPosts = async () => {\n      await axios.get(process.env.REACT_APP_DJANGO_API_URL+'/api/api/?id='+id)\n      .then(res1 => {\n        setSections(res1.data);\n        axios.get(process.env.REACT_APP_DJANGO_API_URL+'/api/stages/')\n        .then(res2 => {\n          setStages(res2.data);\n        })\n      }).catch(error => setError(error))\n  }\n\n  return (\n    <div>\n      <ErrorModal isVisibled={true}/>\n      <span className=\"border border-red-500 bg-red-300\">{error.message}</span>\n      <div className=\"flex\">\n        <div style={{\"paddingTop\":\"4.0rem\"}}>\n          <TimeLine wholeTime={wholeTime}/>\n        </div>\n        <TimeTableArea stages={stages} sections={sections} wholeTime={wholeTime}/>\n      </div>\n      <div className=\"fixed bottom-12 right-12\">\n        <CreateBtn wholeTime={wholeTime}></CreateBtn>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react'\nimport { useLocation } from 'react-router-dom';\nimport TimeLine from '../TiteComponents/TimeLine';\nimport TimeTableArea from '../TiteComponents/TimeTableArea';\n\nconst MyTite = () => {\n  const location = useLocation();\n  const data = location.state;\n\n  const stageTest = [\n    {id: 0, name: 'MyTite1', place: 'お台場', color: '#999999'},\n    {id: 1, name: 'MyTite2', place: 'お台場', color: '#999999'},\n    {id: 2, name: 'MyTite3', place: 'お台場', color: '#999999'},\n    {id: 3, name: 'MyTite4', place: 'お台場', color: '#999999'},\n  ]\n\n  return (\n    <>\n      <div className=\"flex\">\n        <div style={{\"paddingTop\":\"4.0rem\"}}>\n          <TimeLine wholeTime={data.wholeTime}/>\n        </div>\n        <TimeTableArea stages={stageTest} sections={data.data.message.myTiteSections} wholeTime={data.wholeTime}/>\n\n      </div>\n    </>\n  )\n}\n\nexport default MyTite","import React from 'react'\nimport { Link, Route, Router, Routes } from 'react-router-dom'\nimport Home from './Home'\n\nconst SelectFes = () => {\n  return (\n    <div className='text-center'>\n      <div className='mt-20'>\n\n      <div className='m-4 w-1/3 mx-auto border border-slate-500'>\n          <Link to=\"https://mytite-backend-cnszbfeguq-uc.a.run.app/admin\">\n            ADMIN\n          </Link>\n        </div>\n\n       <div className='m-4 w-1/3 mx-auto border border-slate-500'>\n          <Link to=\"/tite/1\">\n            TEST\n          </Link>\n        </div>\n\n        <div className='m-4 w-1/3 mx-auto border border-slate-500'>\n          <Link to=\"/tite/2\">\n            <img src={process.env.PUBLIC_URL + '/resources/tif230804.jpg'} \n              alt=\"TIF2023 0804\" />\n          </Link>\n        </div>\n\n        <div className='m-4 w-1/3 mx-auto border border-slate-500'>\n          <Link to=\"/tite/3\">\n            <img src={process.env.PUBLIC_URL + '/resources/tif230805.jpg'} \n              alt=\"TIF2023 0805\" />\n          </Link>\n        </div>\n\n        <div className='m-4 w-1/3 mx-auto border border-slate-500'>\n          <Link to=\"/tite/4\">\n            <img src={process.env.PUBLIC_URL + '/resources/tif230806.jpg'} \n              alt=\"TIF2023 0806\" />\n          </Link>\n        </div>\n\n      </div>\n      <Routes>\n        <Route path=\"/tite/:id\" component={Home} />\n      </Routes>\n    </div>\n    \n  )\n}\n\nexport default SelectFes","import React from \"react\";\nimport Home from \"./Templates/Home\";\nimport MyTite from \"./Templates/MyTite\";\nimport SelectFes from \"./Templates/SelectFes\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Routes>\n\n\n        {/* <div className=\"p-16\"> */}\n          <Route exact path=\"/\" element={<SelectFes/>}/>\n          <Route path=\"/tite/:id\" element={<Home/>} />\n          <Route path=\"/test\" element={<MyTite/>} />\n        {/* </div> */}\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React,  {createContext} from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// useContext 選択しているセクションIDを配列で保持する\r\nconst contextData = {\r\n  sectionData: [],\r\n  setSection: (val) => {\r\n    // sectionDataの中にvalが存在しなかったら追加、存在していたら削除\r\n    if (contextData.sectionData.includes(val)) {\r\n      contextData.sectionData = contextData.sectionData.filter(\r\n        item => item !== val\r\n      );\r\n    } else {\r\n      contextData.sectionData.push(val);\r\n    }\r\n  }\r\n};\r\nconst MyContext = createContext(contextData);\r\n\r\n// public>index.htmlに紐づいている\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  // 厳格。バグを厳しく見てくれる\r\n  <MyContext.Provider value={contextData}>\r\n    <React.Fragment>\r\n      <App />\r\n    </React.Fragment>\r\n  </MyContext.Provider>\r\n);\r\n\r\nexport default MyContext;\r\n"],"sourceRoot":""}