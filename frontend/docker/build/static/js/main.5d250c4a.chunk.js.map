{"version":3,"sources":["TiteComponents/TimeLine.jsx","TiteComponents/Section.jsx","utils.js","TiteComponents/StageArea.jsx","TiteComponents/TimeTableArea.jsx","CreateBtn.jsx","CmnComponents/SideDrawer.jsx","Templates/Home.jsx","Templates/MyTite.jsx","Templates/SelectFes.jsx","App.jsx","index.js"],"names":["TimeLine","_ref","wholeTime","start","end","_useState","useState","_useState2","_slicedToArray","timeLine","setTimeLine","useEffect","endTime","timeLineArr","currentTime","formattedTime","toLocaleTimeString","hour","minute","hour12","push","Date","getTime","timeInterval","generateTimeLine","React","createElement","Fragment","map","time","index","hours","split","minutes","textStyle","textSize","startsWith","slice","key","className","concat","Section","props","section","sectionClickFlag","clickFlg","setClickFlg","contextVal","useContext","MyContext","choiced","allottedTime","parseInt","allotted_time","repeatCount","Math","floor","formatTime","dateTime","dateObj","getUTCHours","getUTCMinutes","toString","padStart","startTime","start_time","setMinutes","getMinutes","endTimeString","repeatedElements","Array","from","length","_","artist_name","other1","onClick","id","setSection","timeConvert","timeDt","getHours","StageArea","stageInfo","sections","timeList","flag","createTimeList","orgTimeList","sec","utcTime","updatedDateObj","dataStr","checkStartTime","sectionIndex","sectionStartFlag","style","backgroundColor","color","uuidv4","name","TimeTableArea","stages","distributeSectionDict","dict","stage","secLis","filter","distributeSection","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","CreateBtn","contextData","navigate","useNavigate","createMyTite","_ref2","_asyncToGenerator","_callee","dataToSend","response","_context","sectionData","axios","post","process","console","log","data","message","myTiteSections","alert","errorMsg","t0","apply","arguments","MenuComponent","isMenuOpen","setMenuOpen","menuContentStyle","position","top","right","width","transition","menuItemStyle","marginBottom","Link","to","Home","useParams","setSections","_useState3","_useState4","setStages","_useState5","_useState6","setError","getPosts","get","res1","res2","SideDrawer","paddingTop","MyTite","useLocation","place","SelectFes","src","alt","Routes","Route","path","component","App","Router","exact","element","includes","item","createContext","ReactDOM","createRoot","document","getElementById","render","Provider"],"mappings":"gPAqEeA,EAnEE,SAAHC,GAAoB,IAAfC,EAASD,EAATC,UAETC,EAAeD,EAAfC,MAAOC,EAAQF,EAARE,IAAGC,EAEcC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GA4B5B,OA1BAI,oBAAU,YACiB,WAQvB,IAPA,IACMC,EAAUR,EAGVS,EAAc,GAChBC,EALcX,EAOXW,GAAeF,GAAS,CAC7B,IAAMG,EAAgBD,EAAYE,mBAAmB,QAAS,CAC5DC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAEVN,EAAYO,KAAKL,GAEjBD,EAAc,IAAIO,KAAKP,EAAYQ,UAAYC,KAGjDb,EAAYG,GAGdW,IACC,CAACrB,EAAOC,IAGTqB,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAAA,WACED,IAAAC,cAAA,WACCjB,EAASmB,IAAI,SAACC,EAAMC,GACnB,IAAMC,EAAQF,EAAKG,MAAM,KAAK,GACxBC,EAAUJ,EAAKG,MAAM,KAAK,GAC5BE,EAAY,cACZC,EAAW,UAEC,OAAZF,GACFC,EAAY,YACZC,EAAW,aACU,OAAZF,GAAgC,OAAZA,GAAgC,OAAZA,IACjDC,EAAY,cACZC,EAAW,aAGb,IAAMpB,EAAgBgB,EAAMK,WAAW,KAAOL,EAAMM,MAAM,GAAKN,EAE/D,OACEN,IAAAC,cAAA,OACAY,IAAKR,EACLS,UAAS,GAAAC,OAAKN,EAAS,KAAAM,OAAIL,EAAQ,iDAEhCpB,EAAc,IAAEkB,iBC0CdQ,EAjGC,SAACC,GAAU,IACjBC,EAA8BD,EAA9BC,QAASC,EAAqBF,EAArBE,iBAAgBvC,EAEDC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAxCwC,EAAQtC,EAAA,GAAEuC,EAAWvC,EAAA,GACtBwC,EAAaC,qBAAWC,GAcxBC,EAAU,aACVC,EAAeC,SAAST,EAAQU,eAChCC,EAAcC,KAAKC,MAAML,EAAe,GAExCM,EAAa,SAACC,GAClB,IAAMC,EAAU,IAAItC,KAAKqC,GACnB3B,EAAQ4B,EAAQC,cAChB3B,EAAU0B,EAAQE,gBAAgBC,WAAWC,SAAS,EAAG,KAC/D,SAAAvB,OAAUT,EAAK,KAAAS,OAAIP,IAGf+B,EAAYP,EAAWd,EAAQsB,YAC/BrD,EAAU,IAAIS,KAAKsB,EAAQsB,YACjCrD,EAAQsD,WAAWtD,EAAQuD,aAAehB,GAC1C,IAAMiB,EAAgBX,EAAW7C,GAE3ByD,EAAmBC,MAAMC,KAAK,CAAEC,OAAQlB,GAAe,SAACmB,EAAG3C,GAC/D,OAAc,IAAVA,EAEAL,IAAAC,cAAA,OAAKa,UAAS,+BAAAC,OAAiCK,EAAWK,EApB9C,YAqBVZ,IAAKR,GACLL,IAAAC,cAAA,OAAKa,UAAU,gBACbd,IAAAC,cAAA,SAAIsC,EAAU,IAAEI,KAIH,IAAVtC,EACNA,IAAUwB,EAAY,EAErB7B,IAAAC,cAAA,OAAKa,UAAS,0BAAAC,OAA4BK,EAAWK,EA9B3C,YA+BVZ,IAAKR,GACLL,IAAAC,cAAA,OAAKa,UAAU,kCACZI,EAAQ+B,cAMXjD,IAAAC,cAAA,OAAKa,UAAS,aAAAC,OAAeK,EAAWK,EAvC9B,YAwCVZ,IAAKR,GACLL,IAAAC,cAAA,OAAKa,UAAU,kCACZI,EAAQ+B,cAKN5C,IAAUwB,EAAY,EAE7B7B,IAAAC,cAAA,OAAKa,UAAS,0BAAAC,OAA4BK,EAAWK,EAjDzC,YAkDVZ,IAAKR,GACLL,IAAAC,cAAA,YAGe,IAAVI,GAAea,EAAQgC,OAE5BlD,IAAAC,cAAA,OAAKa,UAAS,aAAAC,OAAeK,EAAWK,EAxD9B,YAyDVZ,IAAKR,GACLL,IAAAC,cAAA,OAAKa,UAAU,kCACZI,EAAQgC,SAMblD,IAAAC,cAAA,OAAKa,UAAS,aAAAC,OAAeK,EAAWK,EAjE5B,YAiEmDZ,IAAKR,GAClEL,IAAAC,cAAA,cAOR,OACED,IAAAC,cAAA,OAAKkD,QAAS,kBApFQC,EAoFWlC,EAAQkC,QAnFrCjC,IAGJE,GAAaD,GAEbE,EAAW+B,WAAWD,KAND,IAACA,IAqFnBR,IC/EMU,EAAY,SAACC,GACxB,IAAM/D,EAAO+D,EAAOC,WAAWnB,WAAWC,SAAS,EAAG,KAChD9B,EAAU+C,EAAOb,aAAaL,WAAWC,SAAS,EAAG,KAC3D,SAAAvB,OAAUvB,EAAI,KAAAuB,OAAIP,ICwELiD,EAtFG,SAACxC,GAAU,IACnByC,EAAqDzC,EAArDyC,UAAWC,EAA0C1C,EAA1C0C,SAAUlF,EAAgCwC,EAAhCxC,UAAW0C,EAAqBF,EAArBE,iBAkCpCyC,EA/BkB,SAACrB,EAAWpD,GAGhC,IAFA,IAAMyE,EAAW,GACbvE,EAAc,IAAIO,KAAK2C,GACpBlD,GAAeF,GACpByE,EAASjE,KAAK,CAAES,KAAMkD,EAAYjE,GAAcwE,MAAM,IACtDxE,EAAYoD,WAAWpD,EAAYqD,aAAe,GAEpD,OAAOkB,EAwBME,CAAerF,EAAUC,MAAMD,EAAUE,KACxDiF,EAtBqB,SAACA,GACpB,IAAMG,EAAcH,EAiBpB,OAhBAD,EAASxD,IAAI,SAAC6D,GACZ,IAGMC,EAHS,IAAIrE,KAAKoE,EAAIxB,YAGH3C,UAEnBqE,EAAiB,IAAItE,KADPqE,EAAW,OAG3BE,EAAUb,EAAYY,GAC1BN,EAASzD,IAAI,SAACC,EAAKC,GACdD,EAAKA,MAAM+D,IACZH,EAAIH,MAAO,EACXE,EAAY1D,GAAOwD,MAAK,OAIvBE,EAIEK,CAAeR,GAE1B,IAAIS,GAAgB,EAChB3C,EAAe,EACf4C,GAAmB,EAEvB,OACEtE,IAAAC,cAAA,OAAKa,UAAU,IACbd,IAAAC,cAAA,OAAKY,IAAK6C,EAAUN,GAClBtC,UAAU,cACVyD,MAAO,CAACC,gBAAgBd,EAAUe,QAClCzE,IAAAC,cAAA,OAAKY,IAAK6D,cAAU5D,UAAU,+FAC3B4C,EAAUiB,MAEZf,EAASzD,IAAI,SAACC,GACb,OAAIA,EAAKyD,OAcPQ,GACmBV,EAASZ,OAAO,GACjCrB,EAAeiC,EAASU,GAAczC,cACtC0C,GAAmB,EAEnB5C,GAA4B,EAExB1B,IAAAC,cAACe,EAAO,CACNE,QAASyC,EAASU,GAClBxD,IAAK6D,cACLvD,iBAAkBA,UAT1B,EAdGmD,IACD5C,GAA4B,IACX,IACf4C,GAAiB,GAEZ,MAGPtE,IAAAC,cAAA,KAAGa,UAAU,qCAAqCD,IAAK6D,eAAU,0CCjChEE,SA7BO,SAAHpG,GAAqD,IAAhDqG,EAAMrG,EAANqG,OAAOlB,EAAQnF,EAARmF,SAASlF,EAASD,EAATC,UAAU0C,EAAgB3C,EAAhB2C,iBAY1C2D,EATkB,WACtB,IAAIC,EAAO,GAMX,OALAF,EAAO1E,IAAI,SAAC6E,GACV,IAAMC,EAAStB,EAASuB,OAAO,SAAClB,GAAG,OAAKA,EAAIgB,OAASA,EAAM5B,KAC3D2B,EAAKC,EAAM5B,IAAM6B,IAGZF,EAEqBI,GAE9B,OACEnF,IAAAC,cAAA,OAAKa,UAAU,QACZ+D,EAAO1E,IAAI,SAAC6E,GAAK,OAChBhF,IAAAC,cAACwD,EAAS,CACRC,UAAWsB,EACXrB,SAAUmB,EAAsBE,EAAM5B,IACtC3E,UAAWA,EACXoC,IAAKmE,EAAM5B,GACXjC,iBAAkBA,8BCzB5BiE,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAA/E,EAAAgF,GAAAD,EAAA/E,GAAAgF,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAA/E,EAAAiF,GAAA,OAAAP,OAAAI,eAAAC,EAAA/E,EAAA,CAAAiF,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAA/E,GAAA,IAAA0F,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAA/E,EAAAiF,GAAA,OAAAF,EAAA/E,GAAAiF,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAhC,EAAA8B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAtB,EAAAuB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA3C,OAAA4C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA9C,GAAAG,EAAAmC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAvC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAY,GAAA,SAAAO,EAAA/C,GAAA,0BAAAgD,QAAA,SAAAC,GAAAlC,EAAAf,EAAAiD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAlD,EAAAsC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAL,EAAAmC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAvL,KAAAkL,GAAA,SAAAM,EAAAN,GAAA,IAAA3B,EAAA2B,EAAAO,YAAA,GAAAlC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAO,WAAAlC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAoD,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAArF,GAAA,GAAAsF,EAAA,OAAAA,EAAA3D,KAAA0D,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAAvI,QAAA,KAAA0I,GAAA,EAAAhB,EAAA,SAAAA,IAAA,OAAAgB,EAAAH,EAAAvI,QAAA,GAAA0C,EAAAmC,KAAA0D,EAAAG,GAAA,OAAAhB,EAAA3E,MAAAwF,EAAAG,GAAAhB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAtC,UAAAuC,EAAApC,EAAA2C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAd,EAAAoC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA4D,YAAAnF,EAAAwB,EAAA1B,EAAA,qBAAAhB,EAAAsG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA/D,GAAA,uBAAA+D,EAAAH,aAAAG,EAAAlH,QAAAU,EAAA0G,KAAA,SAAAH,GAAA,OAAArG,OAAAyG,eAAAzG,OAAAyG,eAAAJ,EAAA7D,IAAA6D,EAAAK,UAAAlE,EAAAxB,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAApG,UAAAD,OAAA6B,OAAAkB,GAAAsD,GAAAvG,EAAA6G,MAAA,SAAAxE,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAAnD,WAAAe,EAAAoC,EAAAnD,UAAAW,EAAA,kBAAA8B,OAAA5C,EAAAsD,gBAAAtD,EAAA8G,MAAA,SAAAtF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAAwD,SAAA,IAAAC,EAAA,IAAA1D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAvD,EAAAsG,oBAAA7E,GAAAuF,IAAA5B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAAuG,EAAA5B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAjD,EAAAiH,KAAA,SAAAC,GAAA,IAAAC,EAAAjH,OAAAgH,GAAAD,EAAA,WAAAzL,KAAA2L,EAAAF,EAAA3M,KAAAkB,GAAA,OAAAyL,EAAAG,UAAA,SAAAhC,IAAA,KAAA6B,EAAAvJ,QAAA,KAAAlC,EAAAyL,EAAAI,MAAA,GAAA7L,KAAA2L,EAAA,OAAA/B,EAAA3E,MAAAjF,EAAA4J,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAApF,EAAAgD,SAAAf,EAAA9B,UAAA,CAAAsG,YAAAxE,EAAA+D,MAAA,SAAAsB,GAAA,GAAA1E,KAAA2E,KAAA,EAAA3E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA2C,IAAAwB,EAAA,QAAAhI,KAAAsD,KAAA,MAAAtD,EAAAkI,OAAA,IAAApH,EAAAmC,KAAAK,KAAAtD,KAAA6G,OAAA7G,EAAA/D,MAAA,MAAAqH,KAAAtD,QAAAyF,IAAA0C,KAAA,WAAA7E,KAAAiC,MAAA,MAAA6C,EAAA9E,KAAAiD,WAAA,GAAAE,WAAA,aAAA2B,EAAApF,KAAA,MAAAoF,EAAArF,IAAA,OAAAO,KAAA+E,MAAAhD,kBAAA,SAAAiD,GAAA,GAAAhF,KAAAiC,KAAA,MAAA+C,EAAA,IAAA5F,EAAAY,KAAA,SAAAiF,EAAAC,EAAAC,GAAA,OAAAlE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAAuF,EAAA5F,EAAAoD,KAAA0C,EAAAC,IAAA/F,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAgD,EAAA,QAAA3B,EAAAxD,KAAAiD,WAAAnI,OAAA,EAAA0I,GAAA,IAAAA,EAAA,KAAAZ,EAAA5C,KAAAiD,WAAAO,GAAAvC,EAAA2B,EAAAO,WAAA,YAAAP,EAAAC,OAAA,OAAAoC,EAAA,UAAArC,EAAAC,QAAA7C,KAAA2E,KAAA,KAAAS,EAAA5H,EAAAmC,KAAAiD,EAAA,YAAAyC,EAAA7H,EAAAmC,KAAAiD,EAAA,iBAAAwC,GAAAC,EAAA,IAAArF,KAAA2E,KAAA/B,EAAAE,SAAA,OAAAmC,EAAArC,EAAAE,UAAA,MAAA9C,KAAA2E,KAAA/B,EAAAG,WAAA,OAAAkC,EAAArC,EAAAG,iBAAA,GAAAqC,GAAA,GAAApF,KAAA2E,KAAA/B,EAAAE,SAAA,OAAAmC,EAAArC,EAAAE,UAAA,YAAAuC,EAAA,UAAA7D,MAAA,6CAAAxB,KAAA2E,KAAA/B,EAAAG,WAAA,OAAAkC,EAAArC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAA+D,EAAAxD,KAAAiD,WAAAnI,OAAA,EAAA0I,GAAA,IAAAA,EAAA,KAAAZ,EAAA5C,KAAAiD,WAAAO,GAAA,GAAAZ,EAAAC,QAAA7C,KAAA2E,MAAAnH,EAAAmC,KAAAiD,EAAA,eAAA5C,KAAA2E,KAAA/B,EAAAG,WAAA,KAAAuC,EAAA1C,EAAA,OAAA0C,IAAA,UAAA5F,GAAA,aAAAA,IAAA4F,EAAAzC,QAAApD,MAAA6F,EAAAvC,aAAAuC,EAAA,UAAArE,EAAAqE,IAAAnC,WAAA,UAAAlC,EAAAvB,OAAAuB,EAAAxB,MAAA6F,GAAAtF,KAAAQ,OAAA,OAAAR,KAAAwC,KAAA8C,EAAAvC,WAAAnD,GAAAI,KAAAuF,SAAAtE,IAAAsE,SAAA,SAAAtE,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAA+E,KAAA/E,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAA4F,OAAA,SAAAzC,GAAA,QAAAS,EAAAxD,KAAAiD,WAAAnI,OAAA,EAAA0I,GAAA,IAAAA,EAAA,KAAAZ,EAAA5C,KAAAiD,WAAAO,GAAA,GAAAZ,EAAAG,eAAA,OAAA/C,KAAAuF,SAAA3C,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAAhD,IAAA6F,MAAA,SAAA5C,GAAA,QAAAW,EAAAxD,KAAAiD,WAAAnI,OAAA,EAAA0I,GAAA,IAAAA,EAAA,KAAAZ,EAAA5C,KAAAiD,WAAAO,GAAA,GAAAZ,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAO,WAAA,aAAAlC,EAAAvB,KAAA,KAAAgG,EAAAzE,EAAAxB,IAAAyD,EAAAN,GAAA,OAAA8C,GAAA,UAAAlE,MAAA,0BAAAmE,cAAA,SAAAtC,EAAAd,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAiD,GAAAd,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAxC,EAIA,IAiDewI,EAjDG,SAAHrP,GAAoB,IAAfC,EAASD,EAATC,UAEZqP,EAAcvM,qBAAWC,GACzBuM,EAAYC,cACZC,EAAY,eAAAC,EAAAC,YAAA/I,IAAA2G,KAAC,SAAAqC,IAAA,IAAAC,EAAAC,EAAA,OAAAlJ,IAAAwB,KAAA,SAAA2H,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA9D,MAAA,OAKf,OALe8D,EAAA3B,KAAA,EAETyB,EAAa,CACjBjL,GAAI0K,EAAYU,aAElBD,EAAA9D,KAAA,EACuBgE,IAAMC,KAAKC,0DAAkDN,GAAW,OAE/F,GAFMC,EAAQC,EAAAzE,KACd8E,QAAQC,IAAIP,GAEkD,IAA3D/I,OAAO+G,KAAKgC,EAASQ,KAAKC,QAAQC,gBAAgBjM,OAAU,CAAAwL,EAAA9D,KAAA,QACxB,OAArCwE,MAAMX,EAASQ,KAAKC,QAAQG,UAASX,EAAAtE,OAAA,oBAIH,KAAjCqE,EAASQ,KAAKC,QAAQG,SAAa,CAAAX,EAAA9D,KAAA,SACC,OAArCwE,MAAMX,EAASQ,KAAKC,QAAQG,UAASX,EAAAtE,OAAA,kBAGvC8D,EAAS,UAAU,CAACvE,MAAO,CACzBsF,KAAOR,EAASQ,KAChBrQ,UAAYA,KACV8P,EAAA9D,KAAA,iBAAA8D,EAAA3B,KAAA,GAAA2B,EAAAY,GAAAZ,EAAA,SAGJU,MAAM,wFACNL,QAAQrF,MAAM,8BAA6BgF,EAAAY,IAAS,yBAAAZ,EAAAzB,SAAAsB,EAAA,kBAEvD,kBA3BiB,OAAAF,EAAAkB,MAAAnH,KAAAoH,YAAA,GA6BlB,OACErP,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAQ0H,KAAK,SACX7G,UAAU,8MAKVqC,QAAS,kBAAI8K,MACbjO,IAAAC,cAAA,QAAMa,UAAU,eAAc,gBCsBvBwO,EAlEO,WAAM,IAAA1Q,EACQC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1C2Q,EAAUzQ,EAAA,GAAE0Q,EAAW1Q,EAAA,GAkBxB2Q,EAAmB,CACvBC,SAAU,QACVC,IAAK,OACLC,MAAOL,EAAa,IAAM,OAC1BM,MAAO,MACPC,WAAY,mBAGRC,EAAgB,CACpBC,aAAc,OAGhB,OACEhQ,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKsE,MAAOkL,EAAkB3O,UAAU,QACtCd,IAAAC,cAAA,QAAMa,UAAU,sEACdd,IAAAC,cAAA,KAAGkD,QAhCQ,WACjBqM,GAAaD,IA+BiBzO,UAAU,aAC/ByO,EAAa,OAAM,WAGxBvP,IAAAC,cAAA,OAAKa,UAAU,0DACbd,IAAAC,cAAA,MAAIa,UAAU,eAEZd,IAAAC,cAAA,MAAIsE,MAAOwL,EAAejP,UAAU,kBAAiB,4BACrDd,IAAAC,cAAA,MAAIsE,MAAOwL,GACT/P,IAAAC,cAACgQ,IAAI,CAACC,GAAG,KAAI,+CAIflQ,IAAAC,cAAA,MAAIsE,MAAOwL,EAAejP,UAAU,kBAAiB,8CACrDd,IAAAC,cAAA,MAAIsE,MAAOwL,GACT/P,IAAAC,cAACgQ,IAAI,CAACC,GAAG,aAAY,mCAIvBlQ,IAAAC,cAAA,MAAIsE,MAAOwL,EAAejP,UAAU,uBAAsB,6BAC1Dd,IAAAC,cAAA,MAAIsE,MAAOwL,EAAejP,UAAU,uBAAsB,6BAC1Dd,IAAAC,cAAA,MAAIsE,MAAOwL,EAAejP,UAAU,uBAAsB,6BAC1Dd,IAAAC,cAAA,MAAIsE,MAAOwL,EAAejP,UAAU,kBAAiB,gBACrDd,IAAAC,cAAA,MAAIsE,MAAOwL,EAAejP,UAAU,kBAAiB,oDC5DjEsE,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAA/E,EAAAgF,GAAAD,EAAA/E,GAAAgF,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAA/E,EAAAiF,GAAA,OAAAP,OAAAI,eAAAC,EAAA/E,EAAA,CAAAiF,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAA/E,GAAA,IAAA0F,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAA/E,EAAAiF,GAAA,OAAAF,EAAA/E,GAAAiF,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAhC,EAAA8B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAtB,EAAAuB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA3C,OAAA4C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA9C,GAAAG,EAAAmC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAvC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAY,GAAA,SAAAO,EAAA/C,GAAA,0BAAAgD,QAAA,SAAAC,GAAAlC,EAAAf,EAAAiD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAlD,EAAAsC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAL,EAAAmC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAvL,KAAAkL,GAAA,SAAAM,EAAAN,GAAA,IAAA3B,EAAA2B,EAAAO,YAAA,GAAAlC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAO,WAAAlC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAoD,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAArF,GAAA,GAAAsF,EAAA,OAAAA,EAAA3D,KAAA0D,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAAvI,QAAA,KAAA0I,GAAA,EAAAhB,EAAA,SAAAA,IAAA,OAAAgB,EAAAH,EAAAvI,QAAA,GAAA0C,EAAAmC,KAAA0D,EAAAG,GAAA,OAAAhB,EAAA3E,MAAAwF,EAAAG,GAAAhB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAtC,UAAAuC,EAAApC,EAAA2C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAd,EAAAoC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA4D,YAAAnF,EAAAwB,EAAA1B,EAAA,qBAAAhB,EAAAsG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA/D,GAAA,uBAAA+D,EAAAH,aAAAG,EAAAlH,QAAAU,EAAA0G,KAAA,SAAAH,GAAA,OAAArG,OAAAyG,eAAAzG,OAAAyG,eAAAJ,EAAA7D,IAAA6D,EAAAK,UAAAlE,EAAAxB,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAApG,UAAAD,OAAA6B,OAAAkB,GAAAsD,GAAAvG,EAAA6G,MAAA,SAAAxE,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAAnD,WAAAe,EAAAoC,EAAAnD,UAAAW,EAAA,kBAAA8B,OAAA5C,EAAAsD,gBAAAtD,EAAA8G,MAAA,SAAAtF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAAwD,SAAA,IAAAC,EAAA,IAAA1D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAvD,EAAAsG,oBAAA7E,GAAAuF,IAAA5B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAAuG,EAAA5B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAjD,EAAAiH,KAAA,SAAAC,GAAA,IAAAC,EAAAjH,OAAAgH,GAAAD,EAAA,WAAAzL,KAAA2L,EAAAF,EAAA3M,KAAAkB,GAAA,OAAAyL,EAAAG,UAAA,SAAAhC,IAAA,KAAA6B,EAAAvJ,QAAA,KAAAlC,EAAAyL,EAAAI,MAAA,GAAA7L,KAAA2L,EAAA,OAAA/B,EAAA3E,MAAAjF,EAAA4J,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAApF,EAAAgD,SAAAf,EAAA9B,UAAA,CAAAsG,YAAAxE,EAAA+D,MAAA,SAAAsB,GAAA,GAAA1E,KAAA2E,KAAA,EAAA3E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA2C,IAAAwB,EAAA,QAAAhI,KAAAsD,KAAA,MAAAtD,EAAAkI,OAAA,IAAApH,EAAAmC,KAAAK,KAAAtD,KAAA6G,OAAA7G,EAAA/D,MAAA,MAAAqH,KAAAtD,QAAAyF,IAAA0C,KAAA,WAAA7E,KAAAiC,MAAA,MAAA6C,EAAA9E,KAAAiD,WAAA,GAAAE,WAAA,aAAA2B,EAAApF,KAAA,MAAAoF,EAAArF,IAAA,OAAAO,KAAA+E,MAAAhD,kBAAA,SAAAiD,GAAA,GAAAhF,KAAAiC,KAAA,MAAA+C,EAAA,IAAA5F,EAAAY,KAAA,SAAAiF,EAAAC,EAAAC,GAAA,OAAAlE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAAuF,EAAA5F,EAAAoD,KAAA0C,EAAAC,IAAA/F,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAgD,EAAA,QAAA3B,EAAAxD,KAAAiD,WAAAnI,OAAA,EAAA0I,GAAA,IAAAA,EAAA,KAAAZ,EAAA5C,KAAAiD,WAAAO,GAAAvC,EAAA2B,EAAAO,WAAA,YAAAP,EAAAC,OAAA,OAAAoC,EAAA,UAAArC,EAAAC,QAAA7C,KAAA2E,KAAA,KAAAS,EAAA5H,EAAAmC,KAAAiD,EAAA,YAAAyC,EAAA7H,EAAAmC,KAAAiD,EAAA,iBAAAwC,GAAAC,EAAA,IAAArF,KAAA2E,KAAA/B,EAAAE,SAAA,OAAAmC,EAAArC,EAAAE,UAAA,MAAA9C,KAAA2E,KAAA/B,EAAAG,WAAA,OAAAkC,EAAArC,EAAAG,iBAAA,GAAAqC,GAAA,GAAApF,KAAA2E,KAAA/B,EAAAE,SAAA,OAAAmC,EAAArC,EAAAE,UAAA,YAAAuC,EAAA,UAAA7D,MAAA,6CAAAxB,KAAA2E,KAAA/B,EAAAG,WAAA,OAAAkC,EAAArC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAA+D,EAAAxD,KAAAiD,WAAAnI,OAAA,EAAA0I,GAAA,IAAAA,EAAA,KAAAZ,EAAA5C,KAAAiD,WAAAO,GAAA,GAAAZ,EAAAC,QAAA7C,KAAA2E,MAAAnH,EAAAmC,KAAAiD,EAAA,eAAA5C,KAAA2E,KAAA/B,EAAAG,WAAA,KAAAuC,EAAA1C,EAAA,OAAA0C,IAAA,UAAA5F,GAAA,aAAAA,IAAA4F,EAAAzC,QAAApD,MAAA6F,EAAAvC,aAAAuC,EAAA,UAAArE,EAAAqE,IAAAnC,WAAA,UAAAlC,EAAAvB,OAAAuB,EAAAxB,MAAA6F,GAAAtF,KAAAQ,OAAA,OAAAR,KAAAwC,KAAA8C,EAAAvC,WAAAnD,GAAAI,KAAAuF,SAAAtE,IAAAsE,SAAA,SAAAtE,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAA+E,KAAA/E,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAA4F,OAAA,SAAAzC,GAAA,QAAAS,EAAAxD,KAAAiD,WAAAnI,OAAA,EAAA0I,GAAA,IAAAA,EAAA,KAAAZ,EAAA5C,KAAAiD,WAAAO,GAAA,GAAAZ,EAAAG,eAAA,OAAA/C,KAAAuF,SAAA3C,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAAhD,IAAA6F,MAAA,SAAA5C,GAAA,QAAAW,EAAAxD,KAAAiD,WAAAnI,OAAA,EAAA0I,GAAA,IAAAA,EAAA,KAAAZ,EAAA5C,KAAAiD,WAAAO,GAAA,GAAAZ,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAO,WAAA,aAAAlC,EAAAvB,KAAA,KAAAgG,EAAAzE,EAAAxB,IAAAyD,EAAAN,GAAA,OAAA8C,GAAA,UAAAlE,MAAA,0BAAAmE,cAAA,SAAAtC,EAAAd,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAiD,GAAAd,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAxC,EASA,IAsDe8K,EAtDF,WAAM,IACT/M,EAAOgN,cAAPhN,GAERxE,EAC+BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC+E,EAAQ7E,EAAA,GAAEuR,EAAWvR,EAAA,GAC3BwR,EAC2BzR,mBAAS,IAAG0R,EAAAxR,YAAAuR,EAAA,GAAjCzL,EAAM0L,EAAA,GAAEC,EAASD,EAAA,GAAAE,EACE5R,mBAAS,IAAG6R,EAAA3R,YAAA0R,EAAA,GAAxBE,GAAFD,EAAA,GAAUA,EAAA,IACfjS,EAAY,CAChBC,MAAQ,IAAIkB,KAAK,uBACjBjB,IAAM,IAAIiB,KAAK,wBAEjBV,oBAAU,WACR0R,KACC,IAGerP,qBAAWC,GACjBgN,YAAc,GAE1B,IAEMoC,EAAQ,eAAApS,EAAA2P,YAAA/I,IAAA2G,KAAG,SAAAqC,IAAA,OAAAhJ,IAAAwB,KAAA,SAAA2H,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA9D,MAAA,cAAA8D,EAAA9D,KAAA,EACPgE,IAAMoC,IAAIlC,8DAAqDvL,GACpEiG,KAAK,SAAAyH,GACJT,EAAYS,EAAKhC,MACjBL,IAAMoC,IAAIlC,iEAAwDvL,GACjEiG,KAAK,SAAA0H,GACJP,EAAUO,EAAKjC,UAEhBpB,MAAM,SAAAnE,GAAK,OAAIoH,EAASpH,KAAO,wBAAAgF,EAAAzB,SAAAsB,MACrC,kBATa,OAAA5P,EAAA4Q,MAAAnH,KAAAoH,YAAA,GAWd,OACErP,IAAAC,cAAA,OAAKa,UAAU,OACbd,IAAAC,cAAC+Q,EAAU,MACXhR,IAAAC,cAAA,OAAKa,UAAU,QACbd,IAAAC,cAAA,OAAKsE,MAAO,CAAC0M,WAAa,WACxBjR,IAAAC,cAAC1B,EAAQ,CAACE,UAAWA,KAEvBuB,IAAAC,cAAC2E,EAAa,CACZC,OAAQA,EACRlB,SAAUA,EACVlF,UAAWA,EACX0C,kBAAkB,KAGtBnB,IAAAC,cAAA,OAAKa,UAAU,4BACbd,IAAAC,cAAC4N,EAAS,CAACpP,UAAWA,OCtBfyS,EA9BA,WACb,IACMpC,EADWqC,cACK3H,MAStB,OACExJ,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAC+Q,EAAU,MACXhR,IAAAC,cAAA,OAAKa,UAAU,YACbd,IAAAC,cAAA,OAAKsE,MAAO,CAAC0M,WAAa,WACxBjR,IAAAC,cAAC1B,EAAQ,CAACE,UAAWqQ,EAAKrQ,aAE5BuB,IAAAC,cAAC2E,EAAa,CACZC,OAfU,CAChB,CAACzB,GAAI,EAAGuB,KAAM,UAAWyM,MAAO,qBAAO3M,MAAO,WAC9C,CAACrB,GAAI,EAAGuB,KAAM,UAAWyM,MAAO,qBAAO3M,MAAO,WAC9C,CAACrB,GAAI,EAAGuB,KAAM,UAAWyM,MAAO,qBAAO3M,MAAO,WAC9C,CAACrB,GAAI,EAAGuB,KAAM,UAAWyM,MAAO,qBAAO3M,MAAO,YAYxCd,SAAUmL,EAAKA,KAAKC,QAAQC,eAC5BvQ,UAAWqQ,EAAKrQ,UAChB0C,kBAAkB,OCwBbkQ,EA/CG,WAChB,OACErR,IAAAC,cAAA,OAAKa,UAAU,eACbd,IAAAC,cAAC+Q,EAAU,MACXhR,IAAAC,cAAA,OAAKa,UAAU,SACbd,IAAAC,cAAA,OAAKa,UAAU,6CACbd,IAAAC,cAACgQ,IAAI,CAACC,GAAG,wDAAuD,UAKnElQ,IAAAC,cAAA,OAAKa,UAAU,6CACZd,IAAAC,cAACgQ,IAAI,CAACC,GAAG,WAAU,SAKrBlQ,IAAAC,cAAA,OAAKa,UAAU,6CACbd,IAAAC,cAACgQ,IAAI,CAACC,GAAG,WACPlQ,IAAAC,cAAA,OAAKqR,IAA8B,2BACjCC,IAAI,mBAIVvR,IAAAC,cAAA,OAAKa,UAAU,6CACbd,IAAAC,cAACgQ,IAAI,CAACC,GAAG,WACPlQ,IAAAC,cAAA,OAAKqR,IAA8B,2BACjCC,IAAI,mBAIVvR,IAAAC,cAAA,OAAKa,UAAU,6CACbd,IAAAC,cAACgQ,IAAI,CAACC,GAAG,WACPlQ,IAAAC,cAAA,OAAKqR,IAA8B,2BACjCC,IAAI,oBAKZvR,IAAAC,cAACuR,IAAM,KACLxR,IAAAC,cAACwR,IAAK,CAACC,KAAK,YAAYC,UAAWxB,OCzB5ByB,MAbf,WAEE,OACE5R,IAAAC,cAAC4R,IAAM,KACL7R,IAAAC,cAACuR,IAAM,KACHxR,IAAAC,cAACwR,IAAK,CAACK,OAAK,EAACJ,KAAK,IAAIK,QAAS/R,IAAAC,cAACoR,EAAS,QACzCrR,IAAAC,cAACwR,IAAK,CAACC,KAAK,YAAYK,QAAS/R,IAAAC,cAACkQ,EAAI,QACtCnQ,IAAAC,cAACwR,IAAK,CAACC,KAAK,UAAUK,QAAS/R,IAAAC,cAACiR,EAAM,WCR1CpD,EAAc,CAClBU,YAAa,GACbnL,WAAY,SAACkJ,GAEPuB,EAAYU,YAAYwD,SAASzF,GACnCuB,EAAYU,YAAcV,EAAYU,YAAYtJ,OAChD,SAAA+M,GAAI,OAAIA,IAAS1F,IAGnBuB,EAAYU,YAAY7O,KAAK4M,KAI7B/K,EAAY0Q,wBAAcpE,GAGnBqE,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAEHvS,IAAAC,cAACuB,EAAUgR,SAAQ,CAAC1M,MAAOgI,GACzB9N,IAAAC,cAACD,IAAME,SAAQ,KACbF,IAAAC,cAAC2R,EAAG,SAKKpQ","file":"static/js/main.5d250c4a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst TimeLine = ({wholeTime}) => {\n  \n  const { start, end } = wholeTime;\n\n  const [timeLine, setTimeLine] = useState([]);\n\n  useEffect(() => {\n    const generateTimeLine = () => {\n      const startTime = start;\n      const endTime = end;\n      const timeInterval = 5; // 分単位の間隔\n\n      const timeLineArr = [];\n      let currentTime = startTime;\n\n      while (currentTime <= endTime) {\n        const formattedTime = currentTime.toLocaleTimeString('en-US', {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false,\n        });\n        timeLineArr.push(formattedTime);\n\n        currentTime = new Date(currentTime.getTime() + timeInterval * 60000);\n      }\n\n      setTimeLine(timeLineArr);\n    };\n\n    generateTimeLine();\n  }, [start, end]);\n\n  return (\n    <>\n    <div>\n      <div>\n      {timeLine.map((time, index) => {\n        const hours = time.split(':')[0];\n        const minutes = time.split(':')[1];\n        let textStyle = 'font-normal';\n        let textSize = 'text-xs';\n        \n        if (minutes === '00') {\n          textStyle = 'font-bold';\n          textSize = 'text-base';\n        } else if (minutes === '15' || minutes === '30' || minutes === '45') {\n          textStyle = 'font-normal';\n          textSize = 'text-base';\n        }\n        \n        const formattedTime = hours.startsWith('0') ? hours.slice(1) : hours;\n        \n        return (\n          <div\n          key={index}\n          className={`${textStyle} ${textSize} mt-1 h-6 flex items-center justify-end pr-2`}\n          >\n            {formattedTime}:{minutes}\n          </div>\n        );\n      })}\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default TimeLine","import React, { useState,useContext } from 'react';\r\n// import { add } from '../redux/state';\r\nimport MyContext from '..';\r\n\r\nconst Section = (props) => {\r\n  const { section, sectionClickFlag } = props;\r\n\r\n  const [clickFlg, setClickFlg] = useState(false);\r\n  const contextVal = useContext(MyContext)\r\n\r\n  // Sectionをクリックしたときの処理\r\n  const toggleClickFlg = (id) => {\r\n    if(!sectionClickFlag){\r\n      return;\r\n    }\r\n    setClickFlg(!clickFlg);\r\n    // Contextに値を登録する\r\n    contextVal.setSection(id);\r\n  };\r\n\r\n\r\n  const notChoise = 'bg-white';\r\n  const choiced = 'bg-red-200';\r\n  const allottedTime = parseInt(section.allotted_time);\r\n  const repeatCount = Math.floor(allottedTime / 5); // allottedTimeを5で割った商を取得\r\n\r\n  const formatTime = (dateTime) => {\r\n    const dateObj = new Date(dateTime);\r\n    const hours = dateObj.getUTCHours(); // 標準時に9時間を加算\r\n    const minutes = dateObj.getUTCMinutes().toString().padStart(2, '0');\r\n    return `${hours}:${minutes}`;\r\n  };\r\n\r\n  const startTime = formatTime(section.start_time);\r\n  const endTime = new Date(section.start_time);\r\n  endTime.setMinutes(endTime.getMinutes() + allottedTime);\r\n  const endTimeString = formatTime(endTime);\r\n\r\n  const repeatedElements = Array.from({ length: repeatCount }, (_, index) => {\r\n    if (index === 0) {\r\n      return (\r\n        <div className={`mx-2 mt-1 pt-1 rounded-t-md ${clickFlg ? choiced : notChoise}`} \r\n          key={index}>\r\n          <div className='mx-1 text-sm'>\r\n            <p>{startTime}~{endTimeString}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (index === 1) {\r\n      if(index === repeatCount-1){\r\n        return (\r\n          <div className={`mx-2 pt-2 rounded-b-md ${clickFlg ? choiced : notChoise}`} \r\n          key={index}>\r\n          <div className='mx-2 text-sm whitespace-nowrap'>\r\n            {section.artist_name}\r\n          </div>\r\n        </div>\r\n        );\r\n      }else{\r\n        return (\r\n          <div className={`mx-2 pt-2 ${clickFlg ? choiced : notChoise}`} \r\n          key={index}>\r\n          <div className='mx-2 text-sm whitespace-nowrap'>\r\n            {section.artist_name}\r\n          </div>\r\n        </div>\r\n        );\r\n      }\r\n    } else if (index === repeatCount-1) {\r\n      return (\r\n        <div className={`mx-2 pt-1 rounded-b-md ${clickFlg ? choiced : notChoise}`} \r\n          key={index}>\r\n          <br />\r\n        </div>\r\n      );\r\n    } else if (index === 2 && section.other1) {\r\n        return (\r\n          <div className={`mx-2 pt-3 ${clickFlg ? choiced : notChoise}`} \r\n          key={index}>\r\n          <div className='mx-2 text-xs whitespace-nowrap'>\r\n            {section.other1}\r\n          </div>\r\n        </div>\r\n        );\r\n    } else {\r\n      return (\r\n        <div className={`mx-2 pt-1 ${clickFlg ? choiced : notChoise}`} key={index}>\r\n          <br />\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n\r\n  \r\n  return (\r\n    <div onClick={()=>toggleClickFlg(section.id)}>\r\n      {repeatedElements}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;","// export const  createTimeList=(startTime, endTime)=> {\n//   const timeList = [];\n//   let currentTime = new Date(startTime);\n\n//   while (currentTime <= endTime) {\n//     const hour = currentTime.getHours().toString().padStart(2, '0');\n//     const minutes = currentTime.getMinutes().toString().padStart(2, '0');\n//     const timeString = `${hour}:${minutes}`;\n\n//     timeList.push({ time: timeString, flag: false });\n\n//     currentTime.setMinutes(currentTime.getMinutes() + 5);\n//   }\n\n//   return timeList;\n// }\n\nexport const timeConvert=(timeDt)=>{\n  const hour = timeDt.getHours().toString().padStart(2, '0');\n  const minutes = timeDt.getMinutes().toString().padStart(2, '0');\n  return `${hour}:${minutes}`;\n}","import React from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Section from './Section';\r\nimport {timeConvert} from '../utils'\r\n\r\n\r\nconst StageArea = (props) => {\r\n  const { stageInfo, sections, wholeTime, sectionClickFlag } = props;\r\n  \r\n  // 時間オブジェクト配列を作る処理\r\n  const  createTimeList=(startTime, endTime)=> {\r\n    const timeList = [];\r\n    let currentTime = new Date(startTime);\r\n    while (currentTime <= endTime) {\r\n      timeList.push({ time: timeConvert(currentTime), flag: false });\r\n      currentTime.setMinutes(currentTime.getMinutes() + 5);\r\n    }\r\n    return timeList;\r\n  }\r\n\r\n  const checkStartTime=(timeList)=>{\r\n    const orgTimeList = timeList;\r\n    sections.map((sec)=>{\r\n      let start_dt = new Date(sec.start_time);\r\n      // 標準時が効いているので時間を合わせる。\r\n      // 地域によって差がでる？\r\n      const utcTime = start_dt.getTime();\r\n      const updatedTime = utcTime - (9 * 60 * 60 * 1000);\r\n      const updatedDateObj = new Date(updatedTime);\r\n      // hh:mmの形式に合わせている\r\n      let dataStr = timeConvert(updatedDateObj);\r\n      timeList.map((time,index)=>{\r\n        if(time.time==dataStr){\r\n          sec.flag = true;\r\n          orgTimeList[index].flag=true\r\n        }\r\n      })\r\n    })\r\n    return orgTimeList;\r\n  }\r\n\r\n  let timeList = createTimeList(wholeTime.start,wholeTime.end);\r\n  timeList = checkStartTime(timeList);\r\n\r\n  let sectionIndex = -1;\r\n  let allottedTime = 0;\r\n  let sectionStartFlag = false;\r\n\r\n  return (\r\n    <div className=''>\r\n      <div key={stageInfo.id}\r\n        className='w-60 h-full'\r\n        style={{backgroundColor:stageInfo.color}}>\r\n        <div key={uuidv4()} className='flex h-16 items-center justify-center text-white text-white-outline text-4xl font-extrabold'>\r\n          {stageInfo.name}\r\n        </div>\r\n        {timeList.map((time)=>{\r\n          if(!time.flag){\r\n            if(sectionStartFlag){\r\n              allottedTime = allottedTime-5;\r\n              if(allottedTime<=0){\r\n                sectionStartFlag=false;\r\n              }\r\n              return null;\r\n            }\r\n            return (\r\n              <p className='mt-1 h-6 text-gray-300 text-center' key={uuidv4()}>\r\n                ---------------------------------\r\n                </p>\r\n            )\r\n          }else{\r\n            sectionIndex++;\r\n            if(sectionIndex <= sections.length-1){\r\n              allottedTime = sections[sectionIndex].allotted_time;\r\n              sectionStartFlag = true;\r\n\r\n              allottedTime = allottedTime-5;\r\n              return(\r\n                  <Section \r\n                    section={sections[sectionIndex]} \r\n                    key={uuidv4()}\r\n                    sectionClickFlag={sectionClickFlag}\r\n                    />\r\n                )\r\n            }\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StageArea","import React from 'react'\r\nimport StageArea from './StageArea'\r\nimport '../styles/custom.css';\r\n\r\nconst TimeTableArea = ({stages,sections,wholeTime,sectionClickFlag}) => {\r\n\r\n  // 画面表示時にステージ毎のSectionに分ける\r\n  const distributeSection=()=>{\r\n    let dict = {}\r\n    stages.map((stage) => {\r\n      const secLis = sections.filter((sec) => sec.stage == stage.id);\r\n      dict[stage.id] = secLis;\r\n      }\r\n    );\r\n    return dict\r\n  };\r\n  const distributeSectionDict = distributeSection();\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      {stages.map((stage) => \r\n        <StageArea \r\n          stageInfo={stage} \r\n          sections={distributeSectionDict[stage.id]} \r\n          wholeTime={wholeTime}\r\n          key={stage.id}\r\n          sectionClickFlag={sectionClickFlag}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeTableArea","import React, { useContext } from 'react';\nimport MyContext from '.';\nimport axios from 'axios';\nimport { useNavigate  } from 'react-router-dom';\n\nconst CreateBtn = ({wholeTime}) => {\n\n  const contextData = useContext(MyContext)\n  const navigate  = useNavigate ();\n  const createMyTite=async()=>{\n    try {\n      const dataToSend = {\n        id: contextData.sectionData\n      };\n      // POSTリクエストを送信\n      const response = await axios.post(process.env.REACT_APP_DJANGO_API_URL+'/api/api/', dataToSend);\n      console.log(response)\n      // 1つも選択していなかったらエラー\n      if(Object.keys(response.data.message.myTiteSections).length===0){\n        alert(response.data.message.errorMsg)\n        return;\n      }\n      // エラーメッセージが返されたら表示してreturn\n      if(response.data.message.errorMsg!==\"\"){\n        alert(response.data.message.errorMsg)\n        return;\n      }\n      navigate('/mytite',{state: {\n        'data':response.data,\n        'wholeTime':wholeTime\n      }});\n\n    } catch (error) {\n      alert(\"システムエラーが発生しました\")\n      console.error('Error sending POST request:', error);\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" \n        className=\"text-blue-700 border border-blue-700 \n          hover:bg-blue-700 hover:text-white \n          focus:ring-4 focus:outline-none focus:ring-blue-300 \n          font-medium rounded-full text-sm p-2.5 text-center \n          inline-flex items-center\"\n        onClick={()=>createMyTite()}>\n        <span className='p-2 text-xl'>GO</span>\n      </button>\n    </div>\n  );\n};\n\n\nexport default CreateBtn;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MenuComponent = () => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n\n  const toggleMenu = () => {\n    setMenuOpen(!isMenuOpen);\n  };\n\n  const menuButtonStyle = {\n    position: 'fixed',\n    top: '20px',\n    right: '20px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    padding: '8px 16px',\n    borderRadius: '4px',\n    cursor: 'pointer',\n  };\n\n  const menuContentStyle = {\n    position: 'fixed',\n    top: '2rem',\n    right: isMenuOpen ? '0' : '-74%',\n    width: '80%',\n    transition: 'right 0.5s ease',\n  };\n\n  const menuItemStyle = {\n    marginBottom: '5px',\n  };\n\n  return (\n    <div>\n      <div style={menuContentStyle} className='flex'>\n        <span className='h-12 flex items-center rounded-tl rounded-bl bg-gray-200 shadow-xl'>\n          <p onClick={toggleMenu} className='pr-4 m-1 ' > \n            {isMenuOpen ? '×' : '＜'}\n          </p>\n        </span>\n        <div className='bg-gray-200 pl-8 text-left w-full rounded-bl shadow-xl'>\n          <ul className='d-none py-3'>\n          \n            <li style={menuItemStyle} className=\"text-slate-400\">ログイン</li>\n            <li style={menuItemStyle}>\n              <Link to=\"/\">\n                トップメニュー\n              </Link>\n            </li>\n            <li style={menuItemStyle} className=\"text-slate-400\">オススメタイテ</li>\n            <li style={menuItemStyle}>\n              <Link to=\"/mytite/1\">\n                マイタイテ\n              </Link>\n            </li>\n            <li style={menuItemStyle} className='pl-6 text-slate-400'>スロット1</li>\n            <li style={menuItemStyle} className='pl-6 text-slate-400'>スロット2</li>\n            <li style={menuItemStyle} className='pl-6 text-slate-400'>スロット3</li>\n            <li style={menuItemStyle} className=\"text-slate-400\">設定</li>\n            <li style={menuItemStyle} className=\"text-slate-400\">ログアウト</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuComponent;\n","import React, { useContext, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport ErrorModal from '../CmnComponents/ErrorModal'\nimport TimeLine from '../TiteComponents/TimeLine'\nimport TimeTableArea from '../TiteComponents/TimeTableArea'\nimport CreateBtn from '../CreateBtn'\nimport axios from \"axios\"\nimport MyContext from '..';\nimport SideDrawer from '../CmnComponents/SideDrawer'\n\nconst Home = () => {\n  const { id } = useParams();\n\n  // Sectionの値\n  const[sections, setSections] = useState([]);\n  // Stagesの値\n  const[stages, setStages] = useState([]);\n  const[error, setError] = useState('')\n  const wholeTime = {\n    \"start\":new Date('1899-12-30T09:00:00'),\n    \"end\":new Date('1899-12-30T21:30:00'),\n  }\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  // Homeコンポーネントが読み込まれた際、useContextの値をリセット\n  let contextData = useContext(MyContext)\n  contextData.sectionData = []\n\n  const iFesId = id\n  // DjangoのAPIと通信するメソッド\n  const getPosts = async () => {\n      await axios.get(process.env.REACT_APP_DJANGO_API_URL+'/api/api/?id='+id)\n      .then(res1 => {\n        setSections(res1.data);\n        axios.get(process.env.REACT_APP_DJANGO_API_URL+'/api/stages/?id='+id)\n        .then(res2 => {\n          setStages(res2.data);\n        })\n      }).catch(error => setError(error))\n  }\n\n  return (\n    <div className='m-8'>\n      <SideDrawer></SideDrawer>\n      <div className=\"flex\">\n        <div style={{\"paddingTop\":\"4.0rem\"}}>\n          <TimeLine wholeTime={wholeTime}/>\n        </div>\n        <TimeTableArea \n          stages={stages} \n          sections={sections} \n          wholeTime={wholeTime}\n          sectionClickFlag={true}\n        />\n      </div>\n      <div className=\"fixed bottom-12 right-12\">\n        <CreateBtn wholeTime={wholeTime}></CreateBtn>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react'\nimport { useLocation } from 'react-router-dom';\nimport TimeLine from '../TiteComponents/TimeLine';\nimport TimeTableArea from '../TiteComponents/TimeTableArea';\nimport SideDrawer from '../CmnComponents/SideDrawer'\n\nconst MyTite = () => {\n  const location = useLocation();\n  const data = location.state;\n\n  const stageTest = [\n    {id: 0, name: 'MyTite1', place: 'お台場', color: '#999999'},\n    {id: 1, name: 'MyTite2', place: 'お台場', color: '#999999'},\n    {id: 2, name: 'MyTite3', place: 'お台場', color: '#999999'},\n    {id: 3, name: 'MyTite4', place: 'お台場', color: '#999999'},\n  ]\n\n  return (\n    <>\n      <SideDrawer></SideDrawer>\n      <div className=\"flex m-8\">\n        <div style={{\"paddingTop\":\"4.0rem\"}}>\n          <TimeLine wholeTime={data.wholeTime}/>\n        </div>\n        <TimeTableArea \n          stages={stageTest} \n          sections={data.data.message.myTiteSections} \n          wholeTime={data.wholeTime}\n          sectionClickFlag={false}\n        />\n\n      </div>\n    </>\n  )\n}\n\nexport default MyTite","import React from 'react'\r\nimport { Link, Route, Router, Routes } from 'react-router-dom'\r\nimport Home from './Home'\r\nimport SideDrawer from '../CmnComponents/SideDrawer'\r\n\r\nconst SelectFes = () => {\r\n  return (\r\n    <div className='text-center'>\r\n      <SideDrawer></SideDrawer>\r\n      <div className='mt-20'>\r\n        <div className='m-4 w-4/5 mx-auto border border-slate-500'>\r\n          <Link to=\"https://mytite-backend-cnszbfeguq-uc.a.run.app/admin\">\r\n            ADMIN\r\n          </Link>\r\n        </div>\r\n\r\n       <div className='m-4 w-4/5 mx-auto border border-slate-500'>\r\n          <Link to=\"/tite/1\">\r\n            TEST\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='m-4 w-4/5 mx-auto border border-slate-500'>\r\n          <Link to=\"/tite/2\">\r\n            <img src={process.env.PUBLIC_URL + '/resources/tif230804.jpg'} \r\n              alt=\"TIF2023 0804\" />\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='m-4 w-4/5 mx-auto border border-slate-500'>\r\n          <Link to=\"/tite/3\">\r\n            <img src={process.env.PUBLIC_URL + '/resources/tif230805.jpg'} \r\n              alt=\"TIF2023 0805\" />\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='m-4 w-4/5 mx-auto border border-slate-500'>\r\n          <Link to=\"/tite/4\">\r\n            <img src={process.env.PUBLIC_URL + '/resources/tif230806.jpg'} \r\n              alt=\"TIF2023 0806\" />\r\n          </Link>\r\n        </div>\r\n\r\n      </div>\r\n      <Routes>\r\n        <Route path=\"/tite/:id\" component={Home} />\r\n      </Routes>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default SelectFes","import React from \"react\";\nimport Home from \"./Templates/Home\";\nimport MyTite from \"./Templates/MyTite\";\nimport SelectFes from \"./Templates/SelectFes\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Routes>\n          <Route exact path=\"/\" element={<SelectFes/>}/>\n          <Route path=\"/tite/:id\" element={<Home/>} />\n          <Route path=\"/mytite\" element={<MyTite/>} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React,  {createContext} from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// useContext 選択しているセクションIDを配列で保持する\r\nconst contextData = {\r\n  sectionData: [],\r\n  setSection: (val) => {\r\n    // sectionDataの中にvalが存在しなかったら追加、存在していたら削除\r\n    if (contextData.sectionData.includes(val)) {\r\n      contextData.sectionData = contextData.sectionData.filter(\r\n        item => item !== val\r\n      );\r\n    } else {\r\n      contextData.sectionData.push(val);\r\n    }\r\n  }\r\n};\r\nconst MyContext = createContext(contextData);\r\n\r\n// public>index.htmlに紐づいている\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  // 厳格。バグを厳しく見てくれる\r\n  <MyContext.Provider value={contextData}>\r\n    <React.Fragment>\r\n      <App />\r\n    </React.Fragment>\r\n  </MyContext.Provider>\r\n);\r\n\r\nexport default MyContext;\r\n"],"sourceRoot":""}